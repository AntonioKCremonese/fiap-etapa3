<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docker-compose.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docker-compose.yml" />
              <option name="originalContent" value="version: '3.8'&#10;&#10;services:&#10;  scheduling-db:&#10;    image: mysql:8.0&#10;    container_name: mysql_container&#10;    restart: always&#10;    environment:&#10;      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}&#10;      MYSQL_DATABASE: ${MYSQL_DATABASE}&#10;      MYSQL_USER: ${MYSQL_USER}&#10;      MYSQL_PASSWORD: ${MYSQL_PASSWORD}&#10;    ports:&#10;      - &quot;3306:3306&quot;&#10;    networks:&#10;      - app-network&#10;    volumes:&#10;      - mysql_data_scheduling:/var/lib/mysql&#10;&#10;  notification-db:&#10;    image: mysql:8.0&#10;    container_name: mysql_notification_container&#10;    restart: always&#10;    environment:&#10;      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}&#10;      MYSQL_DATABASE: ${MYSQL_NOTIFICATION_DATABASE}&#10;      MYSQL_USER: ${MYSQL_USER}&#10;      MYSQL_PASSWORD: ${MYSQL_PASSWORD}&#10;    ports:&#10;      - &quot;3307:3306&quot;&#10;    networks:&#10;      - app-network&#10;    volumes:&#10;      - mysql_data_notification:/var/lib/mysql&#10;&#10;  rabbitmq:&#10;    image: rabbitmq:3-management&#10;    container_name: rabbitmq&#10;    ports:&#10;      - &quot;5672:5672&quot;&#10;      - &quot;15672:15672&quot;&#10;    environment:&#10;      RABBITMQ_DEFAULT_USER: guest&#10;      RABBITMQ_DEFAULT_PASS: guest&#10;    networks:&#10;      - app-network&#10;&#10;  scheduling-app:&#10;    build:&#10;      context: ./fiap-hosp-scheduling&#10;    container_name: scheduling_app&#10;    depends_on:&#10;      - scheduling-db&#10;      - rabbitmq&#10;    environment:&#10;      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_container:3306/${MYSQL_DATABASE}&#10;      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}&#10;      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}&#10;      SPRING_RABBITMQ_HOST: rabbitmq&#10;    networks:&#10;      - app-network&#10;    ports:&#10;      - &quot;8080:8080&quot;&#10;&#10;  notification-app:&#10;    build:&#10;      context: ./notification&#10;    container_name: notification_app&#10;    depends_on:&#10;      - notification-db&#10;      - rabbitmq&#10;    environment:&#10;      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_notification_container:3306/${MYSQL_NOTIFICATION_DATABASE}&#10;      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}&#10;      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}&#10;      SPRING_RABBITMQ_HOST: rabbitmq&#10;    networks:&#10;      - app-network&#10;    ports:&#10;      - &quot;8081:8080&quot;&#10;&#10;volumes:&#10;  mysql_data_scheduling:&#10;  mysql_data_notification:&#10;&#10;networks:&#10;  app-network:&#10;    driver: bridge" />
              <option name="updatedContent" value="version: '3.8'&#10;&#10;services:&#10;  scheduling-db:&#10;    image: mysql:8.0&#10;    container_name: mysql_container&#10;    restart: always&#10;    environment:&#10;      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}&#10;      MYSQL_DATABASE: ${MYSQL_DATABASE}&#10;      MYSQL_USER: ${MYSQL_USER}&#10;      MYSQL_PASSWORD: ${MYSQL_PASSWORD}&#10;    ports:&#10;      - &quot;3306:3306&quot;&#10;    networks:&#10;      - app-network&#10;    volumes:&#10;      - mysql_data_scheduling:/var/lib/mysql&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-h&quot;, &quot;localhost&quot;, &quot;-u$$MYSQL_USER&quot;, &quot;-p$$MYSQL_PASSWORD&quot;]&#10;      interval: 5s&#10;      timeout: 5s&#10;      retries: 5&#10;&#10;  notification-db:&#10;    image: mysql:8.0&#10;    container_name: mysql_notification_container&#10;    restart: always&#10;    environment:&#10;      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}&#10;      MYSQL_DATABASE: ${MYSQL_NOTIFICATION_DATABASE}&#10;      MYSQL_USER: ${MYSQL_USER}&#10;      MYSQL_PASSWORD: ${MYSQL_PASSWORD}&#10;    ports:&#10;      - &quot;3307:3306&quot;&#10;    networks:&#10;      - app-network&#10;    volumes:&#10;      - mysql_data_notification:/var/lib/mysql&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-h&quot;, &quot;localhost&quot;, &quot;-u$$MYSQL_USER&quot;, &quot;-p$$MYSQL_PASSWORD&quot;]&#10;      interval: 5s&#10;      timeout: 5s&#10;      retries: 5&#10;&#10;  rabbitmq:&#10;    image: rabbitmq:3-management&#10;    container_name: rabbitmq&#10;    ports:&#10;      - &quot;5672:5672&quot;&#10;      - &quot;15672:15672&quot;&#10;    environment:&#10;      RABBITMQ_DEFAULT_USER: guest&#10;      RABBITMQ_DEFAULT_PASS: guest&#10;    networks:&#10;      - app-network&#10;&#10;  scheduling-app:&#10;    build:&#10;      context: ./fiap-hosp-scheduling&#10;    container_name: scheduling_app&#10;    depends_on:&#10;      scheduling-db:&#10;        condition: service_healthy&#10;      rabbitmq:&#10;        condition: service_started&#10;    environment:&#10;      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_container:3306/${MYSQL_DATABASE}&#10;      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}&#10;      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}&#10;      SPRING_RABBITMQ_HOST: rabbitmq&#10;    networks:&#10;      - app-network&#10;    ports:&#10;      - &quot;8080:8080&quot;&#10;&#10;  notification-app:&#10;    build:&#10;      context: ./notification&#10;    container_name: notification_app&#10;    depends_on:&#10;      notification-db:&#10;        condition: service_healthy&#10;      rabbitmq:&#10;        condition: service_started&#10;    environment:&#10;      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_notification_container:3306/${MYSQL_NOTIFICATION_DATABASE}&#10;      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}&#10;      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}&#10;      SPRING_RABBITMQ_HOST: rabbitmq&#10;    networks:&#10;      - app-network&#10;    ports:&#10;      - &quot;8081:8080&quot;&#10;&#10;volumes:&#10;  mysql_data_scheduling:&#10;  mysql_data_notification:&#10;&#10;networks:&#10;  app-network:&#10;    driver: bridge" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>